{"version":3,"sources":["components/Navbar.js","components/Intro.js","components/Projects.js","components/Contact.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Component","Intro","role","Projects","class","src","alt","target","Contact","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"8OAEqBA,E,uKAEnB,OACE,6BACA,yBAAKC,UAAU,iDACjB,uBAAGA,UAAU,eAAeC,KAAK,KAAjC,eACA,4BAAQD,UAAU,iBAAiBE,KAAK,SAASC,cAAY,WAAWC,cAAY,0BAA0BC,gBAAc,yBAAyBC,gBAAc,QAAQC,aAAW,qBACpL,0BAAMP,UAAU,yBAGlB,yBAAKA,UAAU,iDAAiDQ,GAAG,0BACjE,wBAAIR,UAAU,eACZ,wBAAIA,UAAU,mBACZ,uBAAGA,UAAU,WAAWC,KAAK,KAA7B,QAAsC,0BAAMD,UAAU,WAAhB,eAExC,wBAAIA,UAAU,YACZ,uBAAGA,UAAU,WAAWC,KAAK,KAA7B,UAEF,wBAAID,UAAU,YACZ,uBAAGA,UAAU,WAAWC,KAAK,KAA7B,aAEF,wBAAID,UAAU,YACZ,uBAAGA,UAAU,WAAWC,KAAK,KAA7B,oB,GAtB4BQ,aCDfC,E,uKAEb,OACI,yBAAKV,UAAU,wDACX,0BAAMW,KAAK,OAAOX,UAAU,eACpC,wBAAIA,UAAU,iBAAd,eACA,uBAAGA,UAAU,QAAb,oDACA,uBAAGA,UAAU,QACX,uBAAGC,KAAK,IAAID,UAAU,4BAAtB,0B,GARyBS,aCCdG,E,uKAEb,OACA,yBAAKZ,UAAU,mBACvB,yBAAKa,MAAM,QACP,yBAAKA,MAAM,eAAgBC,IAAI,wGAAwGC,IAAI,mBAC3I,yBAAKF,MAAM,aACX,wBAAIA,MAAM,cAAV,sBACQ,uBAAGA,MAAM,aAAT,yHACA,4BAAQb,UAAU,OAAM,uBAAGC,KAAK,oDAAoDe,OAAO,UAAnE,WAC9B,uBAAGH,MAAM,aAAY,2BAAOA,MAAM,cAAb,8BAKzB,yBAAKA,MAAM,QACT,yBAAKA,MAAM,eAAgBC,IAAI,wGAAwGC,IAAI,mBAC3I,yBAAKF,MAAM,aACX,wBAAIA,MAAM,cAAV,sBACQ,uBAAGA,MAAM,aAAT,yHACA,4BAAQb,UAAU,OAAM,uBAAGC,KAAK,oDAAoDe,OAAO,UAAnE,WAC9B,uBAAGH,MAAM,aAAY,2BAAOA,MAAM,cAAb,8BAKzB,yBAAKA,MAAM,QACT,yBAAKA,MAAM,eAAgBC,IAAI,wGAAwGC,IAAI,mBAC3I,yBAAKF,MAAM,aACX,wBAAIA,MAAM,cAAV,sBACQ,uBAAGA,MAAM,aAAT,yHACA,4BAAQb,UAAU,OAAM,uBAAGC,KAAK,oDAAoDe,OAAO,UAAnE,WAC9B,uBAAGH,MAAM,aAAY,2BAAOA,MAAM,cAAb,8BAKzB,yBAAKA,MAAM,QACT,yBAAKA,MAAM,eAAgBC,IAAI,wGAAwGC,IAAI,mBAC3I,yBAAKF,MAAM,aACX,wBAAIA,MAAM,cAAV,sBACQ,uBAAGA,MAAM,aAAT,yHACA,4BAAQb,UAAU,OAAM,uBAAGC,KAAK,oDAAoDe,OAAO,UAAnE,WAC9B,uBAAGH,MAAM,aAAY,2BAAOA,MAAM,cAAb,8BAGzB,yBAAKA,MAAM,QACT,yBAAKA,MAAM,eAAgBC,IAAI,wGAAwGC,IAAI,mBAC3I,yBAAKF,MAAM,aACX,wBAAIA,MAAM,cAAV,sBACQ,uBAAGA,MAAM,aAAT,yHACA,4BAAQb,UAAU,OAAM,uBAAGC,KAAK,oDAAoDe,OAAO,UAAnE,WAC9B,uBAAGH,MAAM,aAAY,2BAAOA,MAAM,cAAb,8BAGzB,yBAAKA,MAAM,QACT,yBAAKA,MAAM,eAAgBC,IAAI,wGAAwGC,IAAI,mBAC3I,yBAAKF,MAAM,aACX,wBAAIA,MAAM,cAAV,sBACQ,uBAAGA,MAAM,aAAT,yHACA,4BAAQb,UAAU,OAAM,uBAAGC,KAAK,oDAAoDe,OAAO,UAAnE,WAC9B,uBAAGH,MAAM,aAAY,2BAAOA,MAAM,cAAb,mC,GA7DWJ,aCDjBQ,E,uKAEb,OACI,yBAAKjB,UAAU,aACX,wBAAIA,UAAU,MAAd,eAAmC,6BAAS,6BAC5C,4BACG,uBAAGA,UAAU,aAAaC,KAAK,iCAAiCe,OAAO,UAAvE,UACC,uBAAGhB,UAAU,cAAcC,KAAK,sCAAsCe,OAAO,UAA7E,YACA,uBAAGhB,UAAU,cAAcC,KAAK,oCAAoCe,OAAO,UAA3E,UAGJ,6BAAS,kC,GAXYP,aCChBS,E,uKAEb,OACI,yBAAKlB,UAAU,gBAAe,6BAC9B,4BAAQA,UAAU,sBAAlB,0BAES,kC,GANeS,aCmBrBU,MAbf,WACE,OACE,yBAAKnB,UAAU,OACf,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,6BACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCJgBoB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.dc91c302.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nexport default class Navbar extends Component{\n    render(){\n  return (\n    <div>\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n  <a className=\"navbar-brand\" href=\"#\">Alim Ansari</a>\n  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span className=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div className=\"justify-content-end   collapse navbar-collapse\" id=\"navbarSupportedContent\">\n    <ul className=\" navbar-nav\">\n      <li className=\"nav-item active\">\n        <a className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a>\n      </li>\n      <li className=\"nav-item\">\n        <a className=\"nav-link\" href=\"#\">Intro</a>\n      </li>\n      <li className=\"nav-item\">\n        <a className=\"nav-link\" href=\"#\">Projects</a>\n      </li>\n      <li className=\"nav-item\">\n        <a className=\"nav-link\" href=\"#\">Contact</a>\n      </li>\n      \n    </ul>\n  </div>\n    </nav>\n    </div>\n  );\n}\n}","import React, { Component } from 'react';\nexport default class Intro extends Component{\n    render(){\n        return(\n            <div className='cover-container d-flex h-100 p-3 mx-auto flex-column'>\n                <main role=\"main\" className=\"inner cover\">\n        <h1 className=\"cover-heading\">Alim Ansari</h1>\n        <p className=\"lead\">I am making this website and it's not fully made</p>\n        <p className=\"lead\">\n          <a href=\"#\" className=\"btn btn-lg btn-secondary\">See My projects</a>\n        </p>\n      </main>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\n\nexport default class Projects extends Component{\n    render(){\n        return(\n        <div className='container cards'>\n<div class=\"card\">\n    <img class=\"card-img-top\"  src=\"https://raw.githubusercontent.com/alim-ansari/currency-converter/master/currency-converter-output.png\" alt=\"Card image cap\"></img>\n    <div class=\"card-body\">\n    <h5 class=\"card-title\">Currency Converter</h5>\n            <p class=\"card-text\">It's a simple Java Swing based Application used to convert Indian Rupees into other currencies mentioned in the list.</p>\n            <button className='btn'><a href='https://github.com/alim-ansari/currency-converter' target='_blank'>Github</a></button>  \n      <p class=\"card-text\"><small class=\"text-muted\">Last updated 3 mins ago</small></p>\n    </div>\n  </div>\n\n\n  <div class=\"card\">\n    <img class=\"card-img-top\"  src=\"https://raw.githubusercontent.com/alim-ansari/currency-converter/master/currency-converter-output.png\" alt=\"Card image cap\"></img>\n    <div class=\"card-body\">\n    <h5 class=\"card-title\">Currency Converter</h5>\n            <p class=\"card-text\">It's a simple Java Swing based Application used to convert Indian Rupees into other currencies mentioned in the list.</p>\n            <button className='btn'><a href='https://github.com/alim-ansari/currency-converter' target='_blank'>Github</a></button>  \n      <p class=\"card-text\"><small class=\"text-muted\">Last updated 3 mins ago</small></p>\n    </div>\n  </div>\n\n\n  <div class=\"card\">\n    <img class=\"card-img-top\"  src=\"https://raw.githubusercontent.com/alim-ansari/currency-converter/master/currency-converter-output.png\" alt=\"Card image cap\"></img>\n    <div class=\"card-body\">\n    <h5 class=\"card-title\">Currency Converter</h5>\n            <p class=\"card-text\">It's a simple Java Swing based Application used to convert Indian Rupees into other currencies mentioned in the list.</p>\n            <button className='btn'><a href='https://github.com/alim-ansari/currency-converter' target='_blank'>Github</a></button>  \n      <p class=\"card-text\"><small class=\"text-muted\">Last updated 3 mins ago</small></p>\n    </div>\n  </div>\n\n  \n  <div class=\"card\">\n    <img class=\"card-img-top\"  src=\"https://raw.githubusercontent.com/alim-ansari/currency-converter/master/currency-converter-output.png\" alt=\"Card image cap\"></img>\n    <div class=\"card-body\">\n    <h5 class=\"card-title\">Currency Converter</h5>\n            <p class=\"card-text\">It's a simple Java Swing based Application used to convert Indian Rupees into other currencies mentioned in the list.</p>\n            <button className='btn'><a href='https://github.com/alim-ansari/currency-converter' target='_blank'>Github</a></button>  \n      <p class=\"card-text\"><small class=\"text-muted\">Last updated 3 mins ago</small></p>\n    </div>\n  </div>\n  <div class=\"card\">\n    <img class=\"card-img-top\"  src=\"https://raw.githubusercontent.com/alim-ansari/currency-converter/master/currency-converter-output.png\" alt=\"Card image cap\"></img>\n    <div class=\"card-body\">\n    <h5 class=\"card-title\">Currency Converter</h5>\n            <p class=\"card-text\">It's a simple Java Swing based Application used to convert Indian Rupees into other currencies mentioned in the list.</p>\n            <button className='btn'><a href='https://github.com/alim-ansari/currency-converter' target='_blank'>Github</a></button>  \n      <p class=\"card-text\"><small class=\"text-muted\">Last updated 3 mins ago</small></p>\n    </div>\n  </div>\n  <div class=\"card\">\n    <img class=\"card-img-top\"  src=\"https://raw.githubusercontent.com/alim-ansari/currency-converter/master/currency-converter-output.png\" alt=\"Card image cap\"></img>\n    <div class=\"card-body\">\n    <h5 class=\"card-title\">Currency Converter</h5>\n            <p class=\"card-text\">It's a simple Java Swing based Application used to convert Indian Rupees into other currencies mentioned in the list.</p>\n            <button className='btn'><a href='https://github.com/alim-ansari/currency-converter' target='_blank'>Github</a></button>  \n      <p class=\"card-text\"><small class=\"text-muted\">Last updated 3 mins ago</small></p>\n    </div>\n  </div>\n  \n</div>\n            \n        )\n    }\n\n}","import React, { Component } from 'react';\nexport default class Contact extends Component{\n    render(){\n        return(\n            <div className='container'>\n                <h1 className='h1'>Contact Me </h1><br></br><br></br>\n                <h2>\n                   <a className='float-left' href='https://github.com/alim-ansari' target='_blank'>Github</a>\n                    <a className='text-center' href='https://linkedin.com/in/alim-ansari' target='_blank'>Linkedin</a>\n                    <a className='float-right' href='mailto:alim.ansari.mail@gmail.com' target='_blank'>Gmail</a>\n                \n                </h2>\n                <br></br><br></br>\n               \n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport '../App.css';\nexport default class Footer extends Component{\n    render(){\n        return(\n            <div className='footer-color'><br></br>\n            <footer className='footer text-center'>\n                Created by Alim Ansari\n            </footer><br></br>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './App.css';\nimport './components/Navbar';\nimport Navbar from './components/Navbar';\nimport Intro from './components/Intro';\nimport Projects from './components/Projects';\nimport Contacts from './components/Contact';\nimport Footer from './components/Footer';\nfunction App() {\n  return (\n    <div className=\"App\">\n    <Navbar/>\n    <Intro/>\n    <Projects/>\n    <br></br>\n    <Contacts/> \n    <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}